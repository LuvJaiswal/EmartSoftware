<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IAgCAhIfzQFsHOm6qAuNZzoCaAID/9k=
</value>
  </data>
</root>